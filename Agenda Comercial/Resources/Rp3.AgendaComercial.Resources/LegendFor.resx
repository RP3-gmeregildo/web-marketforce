<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActividadGrupoPadre" xml:space="preserve">
    <value>Las activades de grupos no pueden estar dentro de otro grupo</value>
  </data>
  <data name="ActividadNoGrupoHijo" xml:space="preserve">
    <value>Solo pueden tener detalles las actividades de grupo</value>
  </data>
  <data name="ActividadProcesada" xml:space="preserve">
    <value>La actividad ha sido procesada exitosamente</value>
  </data>
  <data name="AgendaProcesada" xml:space="preserve">
    <value>La agenda de la ruta ha sido procesada exitosamente</value>
  </data>
  <data name="AgenteToken" xml:space="preserve">
    <value>Escriba el nombre del agente a agregar</value>
  </data>
  <data name="AlertaVisitaRealizadaNDistanciaDestino" xml:space="preserve">
    <value>Visita Realizada a {0} {1} del Destino</value>
  </data>
  <data name="CanalToken" xml:space="preserve">
    <value>Escriba el nombre del canal a agregar</value>
  </data>
  <data name="ClienteBuscar" xml:space="preserve">
    <value>Escriba el nombre del cliente a buscar</value>
  </data>
  <data name="ClienteExcluir" xml:space="preserve">
    <value>Escriba el nombre del cliente a excluir</value>
  </data>
  <data name="ClienteIncluir" xml:space="preserve">
    <value>Escriba el nombre del cliente a incluir</value>
  </data>
  <data name="ClienteToken" xml:space="preserve">
    <value>Escriba el nombre del cliente a agregar</value>
  </data>
  <data name="CorregirErrores" xml:space="preserve">
    <value>Por favor corrija todos los errores</value>
  </data>
  <data name="Dias" xml:space="preserve">
    <value>día(s).</value>
  </data>
  <data name="DiasNoLaborables" xml:space="preserve">
    <value>Días No Laborables</value>
  </data>
  <data name="EliminarDireccionSeleccionada" xml:space="preserve">
    <value>Eliminará la Dirección seleccionada</value>
  </data>
  <data name="EstablecerUbicacion" xml:space="preserve">
    <value>Arrastre el marcador hasta el lugar donde se encuentra la ubicación</value>
  </data>
  <data name="IngreseTextoOpcion" xml:space="preserve">
    <value>Ingrese el texto de la opción</value>
  </data>
  <data name="LoteProcesado" xml:space="preserve">
    <value>El lote ha sido procesado exitosamente</value>
  </data>
  <data name="LoteToken" xml:space="preserve">
    <value>Escriba el nombre del lote a agregar</value>
  </data>
  <data name="NoExistenProgramaciones" xml:space="preserve">
    <value>(No se han definido programaciones)</value>
  </data>
  <data name="RutaProcesada" xml:space="preserve">
    <value>La ruta ha sido procesada exitosamente</value>
  </data>
  <data name="SeleccioneAgenteAgenda" xml:space="preserve">
    <value>Elija un Agente para revisar su Agenda</value>
  </data>
  <data name="SeleccioneAgenteAgendaTitulo" xml:space="preserve">
    <value>Selección de Agente</value>
  </data>
  <data name="SeleccioneAgenteOportunidad" xml:space="preserve">
    <value>Elija un Agente para revisar sus Oportunidades</value>
  </data>
  <data name="SeleccioneRol" xml:space="preserve">
    <value>Seleccione el Rol que utilizará en esta sesión</value>
  </data>
  <data name="Semanas" xml:space="preserve">
    <value>semana(s) en</value>
  </data>
  <data name="TareaProcesada" xml:space="preserve">
    <value>La tarea ha sido procesada exitosamente</value>
  </data>
  <data name="TareasEnEtapa" xml:space="preserve">
    <value>Escoga las tareas que serán realizadas en durante esta Etapa en cada Oportunidad.</value>
  </data>
  <data name="TareaToken" xml:space="preserve">
    <value>Escriba el nombre de la tarea a agendar</value>
  </data>
  <data name="TextCanal" xml:space="preserve">
    <value>Ingrese el canal</value>
  </data>
  <data name="TextTipoCliente" xml:space="preserve">
    <value>Ingrese el tipo de cliente</value>
  </data>
  <data name="TextZona" xml:space="preserve">
    <value>Ingrese la zona</value>
  </data>
  <data name="TipoClienteToken" xml:space="preserve">
    <value>Escriba el nombre del tipo de cliente a agregar</value>
  </data>
  <data name="UsoUbicacionMatriz" xml:space="preserve">
    <value>Indica la ubicación de la oficina matriz, la cual se toma como referencia para la generación de rutas</value>
  </data>
  <data name="VisitaRealizadaEnDestino" xml:space="preserve">
    <value>Visita Realizada en el lugar de Destino</value>
  </data>
  <data name="ZonaToken" xml:space="preserve">
    <value>Escriba el nombre de la zona a agregar</value>
  </data>
  <data name="RazonSocial" xml:space="preserve">
    <value>Ingrese la razón social</value>
  </data>
  <data name="Agente" xml:space="preserve">
    <value>Ingrese el agente</value>
  </data>
  <data name="Cliente" xml:space="preserve">
    <value>Ingrese el cliente</value>
  </data>
  <data name="ClienteContacto" xml:space="preserve">
    <value>Ingrese el contacto</value>
  </data>
</root>