@model IEnumerable<Rp3.AgendaComercial.Models.General.IUbicacion>
@using System.Threading;
@using System.Globalization;
@using System.Web.Script.Serialization
@{
    Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US");
    string mapSelector = "viewMap";

    if (ViewBag.MapSelector != null) { mapSelector = ViewBag.MapSelector; }

    int count = Model.Where(p => p.Latitud != null && p.Longitud != null && p.Longitud != 0 && p.Latitud != 0).Count();
    int countMarkerIndex = Model.Where(p => p.Latitud != null && p.Longitud != null && p.Longitud != 0 && p.Latitud != 0 && p.MarkerIndex != 0).Count();

    var firstPoint = Model.Where(p => p.Latitud != null && p.Longitud != null && p.Longitud != 0 && p.Latitud != 0 && p.MarkerIndex != 0).OrderBy(p => p.MarkerIndex).FirstOrDefault();
    var lastPoint = Model.Where(p => p.Latitud != null && p.Longitud != null && p.Longitud != 0 && p.Latitud != 0 && p.MarkerIndex != 0).OrderBy(p => p.MarkerIndex).LastOrDefault();

    //ViewBag.MapWidth = "100%";
    //ViewBag.MapHeight = "100%";

    if (ViewBag.MapRoute == null) { ViewBag.MapRoute = false; }
    if (ViewBag.MapStart == null) { ViewBag.MapStart = false; }
    if (ViewBag.MapRadiusMode == null) { ViewBag.MapRadiusMode = false; }
    if (ViewBag.MapRadius == null) { ViewBag.MapRadius = 0; }
    if (ViewBag.SuppressRouteMarkers == null) { ViewBag.SuppressRouteMarkers = false; }
    if (ViewBag.TravelMode == null) { ViewBag.TravelMode = "DRIVING"; }
    if (ViewBag.MapWidth == null) { ViewBag.MapWidth = "100%"; }
    if (ViewBag.MapHeight == null) { ViewBag.MapHeight = "90%"; }

    if (ViewBag.ShowMapTitle == null) { ViewBag.ShowMapTitle = false; }

    if (ViewBag.SuppressRouteMarkers)
    {
        if (firstPoint != null)
        {
            firstPoint.MarkerIndex = 1;
        }

        if (lastPoint != null && !ViewBag.MapRadiusMode)
        {
            lastPoint.MarkerIndex = 1;
        }
    }
}

<script language="javascript" type="text/javascript">

    var googleMapArray = [];
    var googleMap = null;
    var bounds = null;
    var latitud = null;
    var longitud = null;
    var directionsService = new google.maps.DirectionsService();
    var requestArray = [], renderArray = [];

    $(window).resize(function(){
        google.maps.event.trigger(googleMap, 'resize');
    });


    $(document).ready(function () {
        bounds = new google.maps.LatLngBounds();
        var options = {
            @if (count > 1){
                <text>zoom : 16,</text>
            }
            else{
                <text>zoom : 14,</text>
            }
            scrollwheel: false,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        googleMap = new google.maps.Map($("#@{@mapSelector}")[0], options);

        var infowindow = new google.maps.InfoWindow();
        var points = [];
        var radiusMarker, secondMarker;

        @if (count == 0){
            <text>
        googleMap.setCenter(new google.maps.LatLng(@Rp3.AgendaComercial.Models.General.Ubicacion.DefaultLatitud, @Rp3.AgendaComercial.Models.General.Ubicacion.DefaultLongitud));
        </text>
        }

        @foreach (var marker in Model.Where(p => p.Latitud != null && p.Longitud != null && p.Longitud != 0 && p.Latitud != 0))
    {
            <text>
        var point = new google.maps.LatLng(@marker.Latitud, @marker.Longitud);

        @if (marker.MarkerIndex != 0 || countMarkerIndex == 0){
                <text>
        bounds.extend(point);
        </text>
            }
        var image, origin, size;

        @if(!ViewBag.SuppressRouteMarkers){
            <text>
        size = new google.maps.Size(30, 42, "px", "px");
        origin = new google.maps.Point(@{ @marker.MarkerStart }, 0);

        @if (ViewBag.MapStart && marker == firstPoint){
            <text>
        image = new google.maps.MarkerImage("@Url.Content("~/Content/AgendaComercial/img/style/markerstart.png")");

        </text>
        }
        else{
            <text>
        image = new google.maps.MarkerImage("@Url.Content("~/Content/AgendaComercial/img/style/sprite_numbers_location.png")", size, origin);
        </text>
        }
        </text>
        }
        else{
            if (marker == firstPoint){
                if (!ViewBag.MapRadiusMode){
                <text>
        image = new google.maps.MarkerImage("@Url.Content("~/Content/AgendaComercial/img/style/markerstart.png")");
        </text>
                }
                else {
                     <text>
        image = new google.maps.MarkerImage("@Url.Content("~/Content/AgendaComercial/img/style/markeruser.png")");
        </text>
                }
            }
            else if (marker == lastPoint){
                if (!ViewBag.MapRadiusMode){
                <text>
        image = new google.maps.MarkerImage("@Url.Content("~/Content/AgendaComercial/img/style/markerend.png")");
        </text>
                }
                else {
                     <text>
        image = new google.maps.MarkerImage("@Url.Content("~/Content/AgendaComercial/img/style/markervisit.png")");
        </text>
                }
            }
            else{
                <text>
        image = new google.maps.MarkerImage("@Url.Content("~/Content/AgendaComercial/img/style/markerpoint.png")");
        </text>
            }
        }

        var marker = new google.maps.Marker({
            position: point,
            map: googleMap,
            title: '@Html.Raw(@marker.Titulo)',
            @if (marker.MarkerIndex != 0)
                {
                    <text>
            icon: image,
            </text>
                }
            zIndex: @{ @marker.MarkerZIndex } ,
            draggable: false
        });

        @if (marker.MarkerIndex != 0){
            <text>
        points.push(marker);
        </text>
        }

        @if (marker.MarkerIndex == 1){
             <text>
        if(!radiusMarker){
            radiusMarker = marker;
        }
        </text>
         }

        @if (marker.MarkerIndex == 2){
             <text>
        if(!secondMarker){
            secondMarker = marker;
        }
        </text>
         }

        google.maps.event.addListener(marker, "click", function () {
            infowindow.close();
            infowindow.setContent('<div style="width:80px"><strong>@{ @marker.Titulo }</strong><br>');
            infowindow.open(googleMap, this);
        });

        @if (count == 1){
                <text>
        latitud = @marker.Latitud;
        longitud = @marker.Longitud;
        </text>
             }

        </text>
    }

        @if (ViewBag.MapRoute && count > 0){
            <text>
        setRoutes(points);
        </text>
        }

        @if (ViewBag.MapRadiusMode && count > 0){
             <text>
        if(radiusMarker){
            var circle = new google.maps.Circle({
                map: googleMap,
                radius: @ViewBag.MapRadius,
                strokeWeight: 1,
                fillColor: '#335AA8'
            });
            circle.bindTo('center', radiusMarker, 'position');

            if(secondMarker){
                var line = new google.maps.Polyline({
                    path: [radiusMarker.getPosition(), secondMarker.getPosition()],
                    strokeColor: "#335AA8",
                    strokeOpacity: 1.0,
                    strokeWeight: 5,
                    geodesic: true,
                    map: googleMap
                });

                var distance = parseInt(google.maps.geometry.spherical.computeDistanceBetween (radiusMarker.getPosition(), secondMarker.getPosition()));
            }
        }
        </text>
         }

        setCenter();

        if(googleMapArray){
            googleMapArray.push(googleMap);
        }

        $('a[data-toggle="tab"][targettype="content"]').click(function () {
            setTimeout(function () {
                checkResizeMap();
            }, 200);
        });

    });

    function setRoutes(points)
    {
        var waypoints = [];
        var i;
        var orig, dest, marker;
        var maxPoints = 8;

        for(i = 0; i < points.length; i++)
        {
            marker = points[i];

            if(i % maxPoints == 0 || i == points.length-1)
            {
                if(i == points.length-1)
                {
                    dest = new google.maps.LatLng(marker.getPosition().lat(), marker.getPosition().lng());

                    if(!orig)
                        orig = dest;
                }

                if(orig && dest)
                {
                    var request = {
                        origin: orig,
                        waypoints: waypoints,
                        destination: dest,
                        travelMode: google.maps.TravelMode["@ViewBag.TravelMode"]
                    };

                    requestArray.push(request);
                    orig = dest;
                    waypoints = [];
                    dest = null;

                    waypoints.push({ location:new google.maps.LatLng(marker.getPosition().lat(), marker.getPosition().lng()), stopover:false});
                }

                if(!orig)
                    orig = new google.maps.LatLng(marker.getPosition().lat(), marker.getPosition().lng());
            }
            else if(i % maxPoints == maxPoints-1)
            {
                dest = new google.maps.LatLng(marker.getPosition().lat(), marker.getPosition().lng());
            }
            else
            {
                waypoints.push({ location:new google.maps.LatLng(marker.getPosition().lat(), marker.getPosition().lng()), stopover:false});
            }
        }

        processRequests();
    };

    function processRequests(){

        var i = 0;

        function submitRequest(){
            directionsService.route(requestArray[i], directionResults);
        }

        function directionResults(result, status) {
            if (status == google.maps.DirectionsStatus.OK) {

                renderArray[i] = new google.maps.DirectionsRenderer({suppressMarkers: true});

                renderArray[i].setMap(googleMap);

                renderArray[i].setOptions({
                    preserveViewport: true,
                    suppressInfoWindows: true
                });

                renderArray[i].setDirections(result);

                nextRequest();
            }
        }

        function nextRequest(){
            i++;
            if(i >= requestArray.length){
                return;
            }
            submitRequest();
        }

        submitRequest();
    };

    function setCenter()
    {
        @if(count==1)
        {
             @:googleMap.setCenter(new google.maps.LatLng(latitud, longitud));
                                                                                                                                        }

        @if (count > 1)
         {
             <text>
        googleMap.fitBounds(bounds);
        </text>
         }
    };

    function checkResizeMap()
    {
        if(googleMap)
        {
            google.maps.event.trigger(googleMap, 'resize');
            setCenter();
        }
    };

</script>


<table>
    <tbody>
        <tr>
            <td><img class="" style="margin-right:1px;margin-top:-4px" width="16" height="16" src="@Url.ContentApplicationImage("oportunidad.png")" /></td>
            <td style="margin-left:10px"><strong>@ViewBag.Descripcion</strong></td>
            <td style="width:100px"></td>
            <td><img class="" style="margin-right:1px;margin-top:-4px" width="16" height="16" src="@Url.ContentApplicationImage("agentes.png")" /></td>
            <td style="margin-left:10px"><strong>@ViewBag.Agente</strong></td>
        </tr>
        <tr>            
            <td colspan="2">@{ Html.Rp3RenderStage((string)ViewBag.Estado != Rp3.AgendaComercial.Models.Constantes.EstadoOportunidad.Concretado ? (int)ViewBag.EtapaOrden - 1 : (int)ViewBag.EtapaOrden); }</td>            
            <td style="width:100px"></td>
            <td><img class="" style="float:left;margin-right:1px;" width="16" height="16" src="@Url.ContentApplicationImage((string)ViewBag.EstadoImageUrl)" /></td>
            <td style="margin-left:10px">@ViewBag.EstadoDescripcion</td>
        </tr>
        <tr>
            <td><img class="" style="margin-right:3px;margin-top:-2px" width="14" height="14" src="@Url.ContentApplicationImage("probabilidad.png")" /></td>
            <td style ="margin-left:10px">@{@ViewBag.Probabilidad.ToString("n0")}%</td>
            <td style="width:100px"></td>
            <td><img class="" style="margin-left:5px;margin-right:3px;margin-top:-2px" width="14" height="14" src="@Url.ContentApplicationImage("importe.png")" /></td>
            <td style="margin-left:10px">@{@ViewBag.Importe.ToString("c0")}</td>
        </tr>
    </tbody>
</table>

<div id="@{@mapSelector}" style="width: @ViewBag.MapWidth; height: @ViewBag.MapHeight;" />

